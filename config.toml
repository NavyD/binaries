[data]

[default]
[default.completion]
path = '{{bins.completion.dir}}/{{bins.completion.type}}/{{name}}'

[default.bin]
# 默认使用shim链接执行文件
type = 'shim'
# 默认安装到bin文件到文件`exe_dir/bin`
path = '{{bins.exe_dir}}'
template = """
#!/usr/bin/env sh
"{{bins.exe_dir}}/{{name}}" "$@"
"""

# install rust
[bins.rust]
# 只有安装功能，不会响应update,check等功能
[[bins.rust.hooks]]
shebang = 'sh -c'
command = "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
on = ['install']

[[bins.rust.hooks]]
command = "rustup self uninstall -y"
on = ['uninstall']

[[bins.rust.hooks]]
command = "rustup update stable"
on = ['update']


[bins.go]
[[bins.go.hooks]]
shebang = 'sh -c'
# TODO
command = ''
on = ['install']


[local.apt-get]
user = 'root'

[[local.apt-get.hook]]
command = 'apt-get install {{#each names}}{{this}}{{#unless}} {{/unless}}{{/each}}'
on = ['install']

[[local.apt-get.hook]]
command = 'apt-get purge {{#each names}}{{this}}{{#unless}} {{/unless}}{{/each}}'
on = ['uninstall']


[local.cargo]
dependents = ['rust']

[[local.cargo.hooks]]
command = 'cargo install {{name}}'
on = ['install', 'update']

[[local.cargo.hooks]]
command = 'cargo install {{name}}'
on = ['uninstall']


[local.go-pkg]
dependents = ['go']


[[bins.hugo]]
github = "gohugoio/hugo"
release = true
pick = ".*extended.*Linux.*tar.*"

[[bins.hugo.exes.hugo]]
pick = '*hugo*'
type = 'shim'

[[bins.hugo.hooks]]
on = ['install', 'update']
command = "sh -c 'hugo completions zsh > _hugo'"

[bins.hugo.completion]
fpath = ['_*']
source = ['.*.zsh']


# [[bins]]
# # clone latest
# github = 'udhos/update-golang'
# # branch = 'master'
# [bins.bin.goup]
# # pick update-golang.sh to goup
# pick = '*.sh'
# type = 'shim'
# shim-template = """
# #!/usr/bin/env sh
# dest="$([ -n "$GOROOT" ] && dirname "$GOROOT" || echo "$HOME/.local/share")"
# # PROFILED for env file
# DESTINATION="$dest" PROFILED="/dev/null" CACHE="/tmp" "{{bins.exe_dir}}/{{name}}" "$@"
# """
# [bins.bin.goup_root]
# # pick update-golang.sh to goup
# pick = '*.sh'
# path = '/usr/local/bin'

# [[bins]]
# github = "Dreamacro/clash"
# release = true
# tag = 'premium'
# pick = ['clash-{{os}}-{{arch}}-2022.05.17.gz']
# [bins.bin.clash]
# pick = 'clash*'
# # 检查目录权限用户，非当前用户时主动提权或失败
# path = '/usr/local/bin'
# type = 'copy'
# # type = 'shim'
# # type = 'symlink'
# [[bins.hook]]
# user = 'root'
# on = ['install']
# shebang = '/bin/sh -c'
# command = """
# echo '[Unit]
# Description=Clash daemon, A rule-based proxy in Go.
# After=network.target

# [Service]
# Type=simple
# Restart=always
# ExecStart=/home/navyd/.local/bin/clash -d /home/navyd/.config/clash

# [Install]
# WantedBy=multi-user.target' > /etc/systemd/system/clash.service \
#     && systemctl --system enable clash.service \
#     && mkdir -p /etc/clash \
#     && curl -sSL 'a/config.yaml' --output /etc/config.yaml
# """
# [[bins.hook]]
# user = 'root'
# on = ['update', 'install', 'uninstall']
# command = 'systemctl daemon-reload'

# [[bins.hook]]
# user = 'root'
# on = ['uninstall']
# shebang = '/bin/sh -c'
# command = 'systemctl --system disable clash.service && rm -rf /etc/systemd/system/clash.service'

# [[bins]]
# github = 'haishanh/yacd'
# release = true
# pick = ['yacd.tar.xz']
# [[bins.hook]]
# user = 'root'
# on = ['install', 'update']
# shebang = '/bin/sh -c'
# command = 'rm -rf /etc/clash/ && mv yacd /etc/clash/'
# [[bins.hook]]
# user = 'root'
# on = ['uninstall']
# shebang = '/bin/sh -c'
# command = 'rm -r /etc/clash/yacd'

# [[bins]]
# local = 'pipx'

# [bins.completion]
# fpath = ['_*']
# source = ['.*.zsh']

# # type = 'source'
# [[bins.hook]]
# shebang = '/bin/sh -c'
# command = "python3 -m pipx ensurepath && poetry completions zsh > _poetry"
# on = ['install']

[bins.maven]
snippet.command = ['python3 /a/b.py']
snippet.urls = ['python3 /a/b.py']
pick = ['.*\.tar.gz$']

[bins.maven.exes.mvn]
pick = 'maven*'

[[bins.maven.hooks]]
command = """sh -c '
curl -fsSL --head "https://archive.apache.org/dist/maven/maven-3/" \
    | grep 'last-modified' \
    | args {} > {data.maven.snippets.picked.info.last_modified}'
"""
on = ['check']

# [[multi-bins]]
# names = ['a', 'b']
# local = 'apt-get'
# # [multi-bins.hook]
