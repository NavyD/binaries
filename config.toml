[data]

[default]
[default.completions]
path = '{{bins.completion.dir}}/{{bins.completion.type}}/{{name}}'

[default.bin]
# 默认使用shim链接执行文件
type = 'shim'
# 默认安装到bin文件到文件`exe_dir/bin`
path = '{{bins.exe_dir}}'
shim-template = """
#!/usr/bin/env sh
"{{bins.exe_dir}}/{{name}}" "$@"
"""
# user = 'cur'

[pm.pip]
install = 'python3 -m pip install {{name}}'

[pm.pipx]
install = 'pipx install {{name}}'
update = 'pipx upgrade {{name}}'

[pm.apt-get]
install = 'apt-get install {{name}}'

[pm.go]

[pm.cargo]


[[bins]]
github = "gohugoio/hugo"
release = true
pick = ".*extended.*Linux.*tar.*"
bin.hugo.pick = '*hugo*'
[[bins.hook]]
on = ['install', 'update']
command = "sh -c 'hugo completions zsh > _hugo'"
[[bins.completions]]
pick = '_hugo'
type = 'fpath'

[[bins]]
# clone latest
github = 'udhos/update-golang'
# branch = 'master'
[bins.bin.goup]
# pick update-golang.sh to goup
pick = '*.sh'
type = 'shim'
shim-template = """
#!/usr/bin/env sh
dest="$([ -n "$GOROOT" ] && dirname "$GOROOT" || echo "$HOME/.local/share")"
# PROFILED for env file
DESTINATION="$dest" PROFILED="/dev/null" CACHE="/tmp" "{{bins.exe_dir}}/{{name}}" "$@"
"""
[bins.bin.goup_root]
# pick update-golang.sh to goup
pick = '*.sh'
path = '/usr/local/bin'

[[bins]]
github = "Dreamacro/clash"
release = true
tag = 'premium'
pick = ['clash-{{os}}-{{arch}}-2022.05.17.gz']
[bins.bin.clash]
pick = 'clash*'
# 检查目录权限用户，非当前用户时主动提权或失败
path = '/usr/local/bin'
type = 'copy'
# type = 'shim'
# type = 'symlink'
[[bins.hook]]
user = 'root'
on = ['install']
shebang = '/bin/sh -c'
command = """
echo '[Unit]
Description=Clash daemon, A rule-based proxy in Go.
After=network.target

[Service]
Type=simple
Restart=always
ExecStart=/home/navyd/.local/bin/clash -d /home/navyd/.config/clash

[Install]
WantedBy=multi-user.target' > /etc/systemd/system/clash.service \
    && systemctl --system enable clash.service \
    && mkdir -p /etc/clash \
    && curl -sSL 'a/config.yaml' --output /etc/config.yaml
"""
[[bins.hook]]
user = 'root'
on = ['update', 'install', 'uninstall']
command = 'systemctl daemon-reload'

[[bins.hook]]
user = 'root'
on = ['uninstall']
shebang = '/bin/sh -c'
command = 'systemctl --system disable clash.service && rm -rf /etc/systemd/system/clash.service'

[[bins]]
github = 'haishanh/yacd'
release = true
pick = ['yacd.tar.xz']
[[bins.hook]]
user = 'root'
on = ['install', 'update']
shebang = '/bin/sh -c'
command = 'rm -rf /etc/clash/ && mv yacd /etc/clash/'
[[bins.hook]]
user = 'root'
on = ['uninstall']
shebang = '/bin/sh -c'
command = 'rm -r /etc/clash/yacd'

[[bins]]
local = 'pipx'
[[bins.completions]]
pick = '_poetry'
# 两种类型，fpath/source放在不同位置，在使用其它plugin manager加载时更方便
type = 'fpath'
# type = 'source'
[[bins.hook]]
shebang = '/bin/sh -c'
command = "python3 -m pipx ensurepath && poetry completions zsh > _poetry"
on = ['install']

[[bins]]
snippet.commands = ['python3 /a/b.py']
snippet.urls = ['python3 /a/b.py']
pick = ['.*\.tar.gz$']
bin.mvn.pick = '.*-bin'


[[bins]]
batch = true
names = ['a', 'b']

